@use '../constants/color.module.scss' as cColor;
@use '../constants/typography.module.scss' as cTypo;

$elem-font-size: cTypo.$fs-400;    
$elem-font-family: cTypo.$body-ff;
$elem-font-weight: cTypo.$body-fw;
$elem-line-height: 1.3;

$elem-padding-left: 12px;
$elem-padding-right: 12px;
$elem-padding-top: 7px;
$elem-padding-bottom: 6px;

$elem-color: cColor.$base-color-100;
$elem-background-color: cColor.$secondary-color-800;
$elem-border-width: 1px;
$elem-border-style: solid;
$elem-border-radius: 4px;

$elem-hover-color: $elem-color;
$elem-hover-background-color: cColor.$secondary-color-900;
$elem-hover-border-width: $elem-border-width;
$elem-hover-border-style: $elem-border-style;
$elem-hover-border-radius: $elem-border-radius;

$elem-disabled-color: $elem-color;
$elem-disabled-background-color: cColor.$secondary-color-600;
$elem-disabled-border-width: $elem-border-width;
$elem-disabled-border-style: $elem-border-style;
$elem-disabled-border-radius: $elem-border-radius;

$select-options-gap: 4px;
$select-indicator-right: 6px;

$elem-transition-duration: 0.1s;

/*

console.log(
    `
    styles here
`.split('\n')
.map(line => {
    if (line.trim().length === 0) {
        return line;
    }
    const cssVarName = line.split(':')[0].trim();
    const jsVarName = cssVarName.replace(/^\$/, '').replace(/-./g, s => s.slice(1).toUpperCase());
    return `${jsVarName}: ${cssVarName};`;
})
.join('\n')
);

*/

:export {
    elemFontSize: $elem-font-size;
    elemFontFamily: $elem-font-family;
    elemFontWeight: $elem-font-weight;
    elemLineHeight: $elem-line-height;
    
    elemPaddingLeft: $elem-padding-left;
    elemPaddingRight: $elem-padding-right;
    elemPaddingTop: $elem-padding-top;
    elemPaddingBottom: $elem-padding-bottom;
    
    elemColor: $elem-color;
    elemBackgroundColor: $elem-background-color;
    elemBorderWidth: $elem-border-width;
    elemBorderStyle: $elem-border-style;
    elemBorderRadius: $elem-border-radius;
    
    elemHoverColor: $elem-hover-color;
    elemHoverBackgroundColor: $elem-hover-background-color;
    elemHoverBorderWidth: $elem-hover-border-width;
    elemHoverBorderStyle: $elem-hover-border-style;
    elemHoverBorderRadius: $elem-hover-border-radius;
    
    elemDisabledColor: $elem-disabled-color;
    elemDisabledBackgroundColor: $elem-disabled-background-color;
    elemDisabledBorderWidth: $elem-disabled-border-width;
    elemDisabledBorderStyle: $elem-disabled-border-style;
    elemDisabledBorderRadius: $elem-disabled-border-radius;
    
    selectOptionsGap: $select-options-gap;
    selectIndicatorRight: $select-indicator-right;

    elemTransitionDuration: $elem-transition-duration;
}